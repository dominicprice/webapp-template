// This file is auto-generated by @hey-api/openapi-ts

import type {
	Options as ClientOptions,
	TDataShape,
	Client,
} from "@hey-api/client-axios";
import type {
	GetPingsData,
	GetPingsResponse,
	GetPingsError,
	PingData,
	PingResponse2,
	PingError,
} from "./types.gen";
import { client as _heyApiClient } from "./client.gen";

export type Options<
	TData extends TDataShape = TDataShape,
	ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
	/**
	 * You can provide a client instance returned by `createClient()` instead of
	 * individual options. This might be also useful if you want to implement a
	 * custom client.
	 */
	client?: Client;
	/**
	 * You can pass arbitrary values through the `meta` object. This can be
	 * used to access values that aren't defined as part of the SDK function.
	 */
	meta?: Record<string, unknown>;
};

/**
 * Get Pings
 */
export const getPings = <ThrowOnError extends boolean = false>(
	options?: Options<GetPingsData, ThrowOnError>,
) => {
	return (options?.client ?? _heyApiClient).get<
		GetPingsResponse,
		GetPingsError,
		ThrowOnError
	>({
		url: "/api/ping/",
		...options,
	});
};

/**
 * Ping
 */
export const ping = <ThrowOnError extends boolean = false>(
	options: Options<PingData, ThrowOnError>,
) => {
	return (options.client ?? _heyApiClient).post<
		PingResponse2,
		PingError,
		ThrowOnError
	>({
		url: "/api/ping/",
		...options,
		headers: {
			"Content-Type": "application/json",
			...options?.headers,
		},
	});
};
